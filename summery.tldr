{
	"tldrawFileFormatVersion": 1,
	"schema": {
		"schemaVersion": 2,
		"sequences": {
			"com.tldraw.store": 5,
			"com.tldraw.asset": 1,
			"com.tldraw.camera": 1,
			"com.tldraw.document": 2,
			"com.tldraw.instance": 25,
			"com.tldraw.instance_page_state": 5,
			"com.tldraw.page": 1,
			"com.tldraw.instance_presence": 6,
			"com.tldraw.pointer": 1,
			"com.tldraw.shape": 4,
			"com.tldraw.asset.bookmark": 2,
			"com.tldraw.asset.image": 5,
			"com.tldraw.asset.video": 5,
			"com.tldraw.shape.group": 0,
			"com.tldraw.shape.text": 3,
			"com.tldraw.shape.bookmark": 2,
			"com.tldraw.shape.draw": 2,
			"com.tldraw.shape.geo": 10,
			"com.tldraw.shape.note": 9,
			"com.tldraw.shape.line": 5,
			"com.tldraw.shape.frame": 1,
			"com.tldraw.shape.arrow": 7,
			"com.tldraw.shape.highlight": 1,
			"com.tldraw.shape.embed": 4,
			"com.tldraw.shape.image": 5,
			"com.tldraw.shape.video": 4,
			"com.tldraw.binding.arrow": 1
		}
	},
	"records": [
		{
			"gridSize": 10,
			"name": "",
			"meta": {},
			"id": "document:document",
			"typeName": "document"
		},
		{
			"meta": {},
			"id": "page:page",
			"name": "Page 1",
			"index": "a1",
			"typeName": "page"
		},
		{
			"id": "pointer:pointer",
			"typeName": "pointer",
			"x": -899.443068849072,
			"y": 1105.8555430845272,
			"lastActivityTimestamp": 1760621522312,
			"meta": {}
		},
		{
			"followingUserId": null,
			"opacityForNextShape": 1,
			"stylesForNextShape": {
				"tldraw:size": "s",
				"tldraw:font": "serif"
			},
			"brush": null,
			"scribbles": [],
			"cursor": {
				"type": "default",
				"rotation": 0
			},
			"isFocusMode": false,
			"exportBackground": true,
			"isDebugMode": false,
			"isToolLocked": false,
			"screenBounds": {
				"x": 0,
				"y": 0,
				"w": 1068,
				"h": 460
			},
			"insets": [
				false,
				false,
				true,
				false
			],
			"zoomBrush": null,
			"isGridMode": false,
			"isPenMode": false,
			"chatMessage": "",
			"isChatting": false,
			"highlightedUserIds": [],
			"isFocused": true,
			"devicePixelRatio": 1.25,
			"isCoarsePointer": false,
			"isHoveringCanvas": true,
			"openMenus": [],
			"isChangingStyle": false,
			"isReadonly": false,
			"meta": {},
			"duplicateProps": null,
			"id": "instance:instance",
			"currentPageId": "page:page",
			"typeName": "instance"
		},
		{
			"editingShapeId": "shape:SnRLJpFnHMEWMV_IJzgOJ",
			"croppingShapeId": null,
			"selectedShapeIds": [
				"shape:SnRLJpFnHMEWMV_IJzgOJ"
			],
			"hoveredShapeId": "shape:SnRLJpFnHMEWMV_IJzgOJ",
			"erasingShapeIds": [],
			"hintingShapeIds": [],
			"focusedGroupId": null,
			"meta": {},
			"id": "instance_page_state:page:page",
			"pageId": "page:page",
			"typeName": "instance_page_state"
		},
		{
			"x": 1313.1218857600577,
			"y": -408.80279787894744,
			"z": 0.5095740812300699,
			"meta": {},
			"id": "camera:page:page",
			"typeName": "camera"
		},
		{
			"x": -1222.967766920561,
			"y": -500.10524207849744,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:bFxO2nynqjwSHtmhcaNxC",
			"type": "text",
			"props": {
				"color": "black",
				"size": "s",
				"w": 2814.53759765625,
				"font": "serif",
				"textAlign": "start",
				"autoSize": true,
				"scale": 1,
				"richText": {
					"type": "doc",
					"content": [
						{
							"type": "heading",
							"attrs": {
								"dir": "auto",
								"level": 1
							},
							"content": [
								{
									"type": "text",
									"text": "Project Summary: Couple's Connect"
								}
							]
						},
						{
							"type": "heading",
							"attrs": {
								"dir": "auto",
								"level": 2
							},
							"content": [
								{
									"type": "text",
									"text": "1. Project Goal"
								}
							]
						},
						{
							"type": "paragraph",
							"attrs": {
								"dir": "auto"
							},
							"content": [
								{
									"type": "text",
									"marks": [
										{
											"type": "bold"
										}
									],
									"text": "Couple's Connect"
								},
								{
									"type": "text",
									"text": " is a modern, web-based video communication platform designed specifically for couples. The primary goal was to create an intimate, feature-rich, and aesthetically pleasing environment for partners to connect, with a special focus on facilitating guided conversations through a counseling-oriented featureset."
								}
							]
						},
						{
							"type": "paragraph",
							"attrs": {
								"dir": "auto"
							},
							"content": [
								{
									"type": "text",
									"text": "The application is built to be secure, private, and efficient, running entirely in the browser without requiring any installations or sign-ups."
								}
							]
						},
						{
							"type": "heading",
							"attrs": {
								"dir": "auto",
								"level": 2
							},
							"content": [
								{
									"type": "text",
									"text": "2. Core Features"
								}
							]
						},
						{
							"type": "paragraph",
							"attrs": {
								"dir": "auto"
							},
							"content": [
								{
									"type": "text",
									"text": "We successfully implemented a range of features to create a unique user experience:"
								}
							]
						},
						{
							"type": "bulletList",
							"content": [
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Real-Time Video & Audio Chat:"
												},
												{
													"type": "text",
													"text": " High-quality, low-latency video and audio streaming directly between two users."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Interactive Counseling Mode:"
												},
												{
													"type": "text",
													"text": " A synchronized question feature where couples can go through a list of conversation starters one by one, with the UI indicating whose turn it is to answer."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Polished User Interface (UI):"
												}
											]
										},
										{
											"type": "bulletList",
											"content": [
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "An elegant \"idle screen\" with a live clock that appears before a call starts."
																}
															]
														}
													]
												},
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "Decorative, animated frames around the video feeds to create a premium feel."
																}
															]
														}
													]
												},
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "A clean, dark-themed layout with intuitive controls."
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Dynamic Video Swapping:"
												},
												{
													"type": "text",
													"text": " Users can click on either video feed to smoothly animate it between the main view and the picture-in-picture display."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Cross-Device Compatibility:"
												},
												{
													"type": "text",
													"text": " The application is fully responsive and works on any modern web browser on desktops, laptops, or mobile devices."
												}
											]
										}
									]
								}
							]
						},
						{
							"type": "heading",
							"attrs": {
								"dir": "auto",
								"level": 2
							},
							"content": [
								{
									"type": "text",
									"text": "3. Technology Stack"
								}
							]
						},
						{
							"type": "paragraph",
							"attrs": {
								"dir": "auto"
							},
							"content": [
								{
									"type": "text",
									"text": "The project is built using a modern but focused set of technologies, separating the frontend (what the user sees) from the backend (the server logic)."
								}
							]
						},
						{
							"type": "heading",
							"attrs": {
								"dir": "auto",
								"level": 3
							},
							"content": [
								{
									"type": "text",
									"text": "Frontend (Client-Side)"
								}
							]
						},
						{
							"type": "bulletList",
							"content": [
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "HTML5:"
												},
												{
													"type": "text",
													"text": " Provides the fundamental structure and content of the web page."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "CSS3:"
												},
												{
													"type": "text",
													"text": " Responsible for all styling, layout, animations, and the responsive design. We used modern CSS features like Flexbox, custom properties (variables), and transitions to create the polished look."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "JavaScript (ES6+):"
												},
												{
													"type": "text",
													"text": " The \"brain\" of the application. All user interactions, video call logic, and communication with the server are handled by JavaScript."
												}
											]
										}
									]
								}
							]
						},
						{
							"type": "heading",
							"attrs": {
								"dir": "auto",
								"level": 4
							},
							"content": [
								{
									"type": "text",
									"text": "Key Web APIs Used:"
								}
							]
						},
						{
							"type": "bulletList",
							"content": [
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "WebRTC (Web Real-Time Communication):"
												},
												{
													"type": "text",
													"text": " This is the core technology that enables direct peer-to-peer (P2P) video and audio streaming between browsers. It's powerful because the video data does "
												},
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "not"
												},
												{
													"type": "text",
													"text": " go through our server, which ensures privacy and reduces server costs."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "WebSockets:"
												},
												{
													"type": "text",
													"text": " This API provides a persistent, two-way communication channel between the user's browser and our Python server. It's used exclusively for \"signaling\" (see architecture below)."
												}
											]
										}
									]
								}
							]
						},
						{
							"type": "heading",
							"attrs": {
								"dir": "auto",
								"level": 3
							},
							"content": [
								{
									"type": "text",
									"text": "Backend (Server-Side)"
								}
							]
						},
						{
							"type": "bulletList",
							"content": [
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Python 3:"
												},
												{
													"type": "text",
													"text": " The programming language used for the server."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "FastAPI:"
												},
												{
													"type": "text",
													"text": " A modern, high-performance Python web framework used to build the backend application. It's particularly well-suited for handling asynchronous tasks like WebSocket connections."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Uvicorn:"
												},
												{
													"type": "text",
													"text": " The lightning-fast ASGI (Asynchronous Server Gateway Interface) server that runs our FastAPI application."
												}
											]
										}
									]
								}
							]
						},
						{
							"type": "heading",
							"attrs": {
								"dir": "auto",
								"level": 3
							},
							"content": [
								{
									"type": "text",
									"text": "Deployment"
								}
							]
						},
						{
							"type": "bulletList",
							"content": [
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Render:"
												},
												{
													"type": "text",
													"text": " A cloud platform used to host the live application, making it accessible via a public URL."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Git & GitHub:"
												},
												{
													"type": "text",
													"text": " The project is version-controlled with Git and hosted on GitHub, which integrates with Render for continuous deployment."
												}
											]
										}
									]
								}
							]
						},
						{
							"type": "heading",
							"attrs": {
								"dir": "auto",
								"level": 2
							},
							"content": [
								{
									"type": "text",
									"text": "4. How It Works: The Architecture"
								}
							]
						},
						{
							"type": "paragraph",
							"attrs": {
								"dir": "auto"
							},
							"content": [
								{
									"type": "text",
									"text": "The application's architecture is designed to be highly efficient by minimizing the load on the server."
								}
							]
						},
						{
							"type": "paragraph",
							"attrs": {
								"dir": "auto"
							},
							"content": [
								{
									"type": "text",
									"marks": [
										{
											"type": "bold"
										}
									],
									"text": "The Backend is only a \"Signaling Server.\""
								}
							]
						},
						{
							"type": "paragraph",
							"attrs": {
								"dir": "auto"
							},
							"content": [
								{
									"type": "text",
									"text": "Our Python server's main job is to act like a telephone operator. It doesn't listen to the conversation (the video stream); it just introduces two people so they can talk directly to each other. This process is called "
								},
								{
									"type": "text",
									"marks": [
										{
											"type": "bold"
										}
									],
									"text": "signaling"
								},
								{
									"type": "text",
									"text": "."
								}
							]
						},
						{
							"type": "paragraph",
							"attrs": {
								"dir": "auto"
							},
							"content": [
								{
									"type": "text",
									"text": "Here’s the flow:"
								}
							]
						},
						{
							"type": "orderedList",
							"attrs": {
								"start": 1
							},
							"content": [
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Initial Connection:"
												},
												{
													"type": "text",
													"text": " When User A and User B open the website, their browsers each open a WebSocket connection to our Python server. The server now knows they are both online."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Initiating a Call (The \"Offer\"):"
												},
												{
													"type": "text",
													"text": " User A clicks \"Start Call.\" Their browser generates a WebRTC \"offer\" (a text message describing their network and media capabilities) and sends it to the Python server via WebSocket."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Relaying the Message:"
												},
												{
													"type": "text",
													"text": " The Python server receives this \"offer\" and immediately forwards it to User B's browser."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "The \"Answer\":"
												},
												{
													"type": "text",
													"text": " User B's browser receives the offer, creates an \"answer\" in response, and sends it back to the Python server, which relays it back to User A."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Peer-to-Peer Connection:"
												},
												{
													"type": "text",
													"text": " After this initial handshake through our server, both browsers have enough information (like IP addresses) to establish a "
												},
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "direct WebRTC connection"
												},
												{
													"type": "text",
													"text": " with each other."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Direct Streaming:"
												},
												{
													"type": "text",
													"text": " The video and audio stream directly between User A and User B. Our Python server is no longer involved in the call, freeing it up to connect other users."
												}
											]
										}
									]
								}
							]
						},
						{
							"type": "paragraph",
							"attrs": {
								"dir": "auto"
							},
							"content": [
								{
									"type": "text",
									"text": "This "
								},
								{
									"type": "text",
									"marks": [
										{
											"type": "bold"
										}
									],
									"text": "peer-to-peer (P2P)"
								},
								{
									"type": "text",
									"text": " architecture is what makes WebRTC so powerful. It's private, secure, and highly scalable."
								}
							]
						}
					]
				}
			},
			"parentId": "page:page",
			"index": "a1m6q8Ul",
			"typeName": "shape"
		},
		{
			"x": -1211.860844059781,
			"y": 833.0957353353375,
			"rotation": 0,
			"isLocked": false,
			"opacity": 1,
			"meta": {},
			"id": "shape:SnRLJpFnHMEWMV_IJzgOJ",
			"type": "text",
			"props": {
				"color": "black",
				"size": "s",
				"w": 2237.512451171875,
				"font": "serif",
				"textAlign": "start",
				"autoSize": true,
				"scale": 1,
				"richText": {
					"type": "doc",
					"content": [
						{
							"type": "heading",
							"attrs": {
								"dir": "auto",
								"level": 1
							},
							"content": [
								{
									"type": "text",
									"text": "Project Flow: Couple's Connect"
								}
							]
						},
						{
							"type": "paragraph",
							"attrs": {
								"dir": "auto"
							},
							"content": [
								{
									"type": "text",
									"text": "This document outlines the step-by-step user and data flow for the Couple's Connect application, from initialization to the end of a call."
								}
							]
						},
						{
							"type": "heading",
							"attrs": {
								"dir": "auto",
								"level": 3
							},
							"content": [
								{
									"type": "text",
									"marks": [
										{
											"type": "bold"
										}
									],
									"text": "Phase 1: Initialization & Waiting (Both Users)"
								}
							]
						},
						{
							"type": "paragraph",
							"attrs": {
								"dir": "auto"
							},
							"content": [
								{
									"type": "text",
									"text": "This phase is identical for both users when they first open the application link."
								}
							]
						},
						{
							"type": "orderedList",
							"attrs": {
								"start": 1
							},
							"content": [
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "User Opens Link:"
												},
												{
													"type": "text",
													"text": " The user navigates to the public URL (e.g., "
												},
												{
													"type": "text",
													"marks": [
														{
															"type": "code"
														}
													],
													"text": "https://...onrender.com"
												},
												{
													"type": "text",
													"text": ")."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Browser Loads Files:"
												},
												{
													"type": "text",
													"text": " The browser downloads the three core frontend files: "
												},
												{
													"type": "text",
													"marks": [
														{
															"type": "code"
														}
													],
													"text": "index.html"
												},
												{
													"type": "text",
													"text": ", "
												},
												{
													"type": "text",
													"marks": [
														{
															"type": "code"
														}
													],
													"text": "style.css"
												},
												{
													"type": "text",
													"text": ", and "
												},
												{
													"type": "text",
													"marks": [
														{
															"type": "code"
														}
													],
													"text": "script.js"
												},
												{
													"type": "text",
													"text": "."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Idle Screen Appears:"
												},
												{
													"type": "text",
													"text": " The UI displays the elegant idle screen with the live clock and welcome message."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "JavaScript Initializes:"
												},
												{
													"type": "text",
													"text": " The "
												},
												{
													"type": "text",
													"marks": [
														{
															"type": "code"
														}
													],
													"text": "script.js"
												},
												{
													"type": "text",
													"text": " file begins to execute:"
												}
											]
										},
										{
											"type": "bulletList",
											"content": [
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "It establishes a "
																},
																{
																	"type": "text",
																	"marks": [
																		{
																			"type": "bold"
																		}
																	],
																	"text": "WebSocket connection"
																},
																{
																	"type": "text",
																	"text": " to the Python server. The server is now aware that a user is online."
																}
															]
														}
													]
												},
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "It calls "
																},
																{
																	"type": "text",
																	"marks": [
																		{
																			"type": "code"
																		}
																	],
																	"text": "navigator.mediaDevices.getUserMedia()"
																},
																{
																	"type": "text",
																	"text": " to request access to the user's camera and microphone."
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "User Grants Permission:"
												},
												{
													"type": "text",
													"text": " The browser prompts the user for camera/mic access. The user clicks \"Allow.\""
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Local Video Appears:"
												},
												{
													"type": "text",
													"text": " The user's own video stream ("
												},
												{
													"type": "text",
													"marks": [
														{
															"type": "code"
														}
													],
													"text": "localStream"
												},
												{
													"type": "text",
													"text": ") is successfully captured and displayed in the small picture-in-picture frame."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "\"Start Call\" is Enabled:"
												},
												{
													"type": "text",
													"text": " The \"Start Call\" button, which was previously disabled, now becomes active and clickable."
												}
											]
										}
									]
								}
							]
						},
						{
							"type": "paragraph",
							"attrs": {
								"dir": "auto"
							},
							"content": [
								{
									"type": "text",
									"text": "At this point, both users are independently on the idle screen, seeing their own video, and ready to initiate a call."
								}
							]
						},
						{
							"type": "heading",
							"attrs": {
								"dir": "auto",
								"level": 3
							},
							"content": [
								{
									"type": "text",
									"marks": [
										{
											"type": "bold"
										}
									],
									"text": "Phase 2: The Handshake (Call Connection)"
								}
							]
						},
						{
							"type": "paragraph",
							"attrs": {
								"dir": "auto"
							},
							"content": [
								{
									"type": "text",
									"text": "This is the critical \"signaling\" phase where the two users' browsers are introduced to each other via the server. Let's call them "
								},
								{
									"type": "text",
									"marks": [
										{
											"type": "bold"
										}
									],
									"text": "User A (Initiator)"
								},
								{
									"type": "text",
									"text": " and "
								},
								{
									"type": "text",
									"marks": [
										{
											"type": "bold"
										}
									],
									"text": "User B (Receiver)"
								},
								{
									"type": "text",
									"text": "."
								}
							]
						},
						{
							"type": "orderedList",
							"attrs": {
								"start": 1
							},
							"content": [
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "User A Clicks \"Start Call\":"
												}
											]
										},
										{
											"type": "bulletList",
											"content": [
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "User A's browser creates a "
																},
																{
																	"type": "text",
																	"marks": [
																		{
																			"type": "bold"
																		}
																	],
																	"text": "WebRTC Peer Connection"
																},
																{
																	"type": "text",
																	"text": "."
																}
															]
														}
													]
												},
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "It then generates a session description called an "
																},
																{
																	"type": "text",
																	"marks": [
																		{
																			"type": "bold"
																		}
																	],
																	"text": "\"offer\""
																},
																{
																	"type": "text",
																	"text": ". This is a block of text containing User A's network information (IP address, etc.) and media capabilities."
																}
															]
														}
													]
												},
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "The browser sends this \"offer\" to the Python server through its WebSocket connection."
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Server Relays the Offer:"
												}
											]
										},
										{
											"type": "bulletList",
											"content": [
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "The Python server receives the \"offer\" message from User A."
																}
															]
														}
													]
												},
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "It immediately broadcasts this message to all "
																},
																{
																	"type": "text",
																	"marks": [
																		{
																			"type": "italic"
																		}
																	],
																	"text": "other"
																},
																{
																	"type": "text",
																	"text": " connected clients. In this case, it sends the \"offer\" to User B."
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "User B Receives the Offer:"
												}
											]
										},
										{
											"type": "bulletList",
											"content": [
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "User B's browser receives the \"offer\" message via its WebSocket."
																}
															]
														}
													]
												},
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "This automatically triggers the call connection process on their side."
																}
															]
														}
													]
												},
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "User B's browser creates its own WebRTC Peer Connection and an "
																},
																{
																	"type": "text",
																	"marks": [
																		{
																			"type": "bold"
																		}
																	],
																	"text": "\"answer\""
																},
																{
																	"type": "text",
																	"text": " to the offer."
																}
															]
														}
													]
												},
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "It sends this \"answer\" back to the Python server."
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Server Relays the Answer:"
												}
											]
										},
										{
											"type": "bulletList",
											"content": [
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "The Python server receives the \"answer\" from User B and relays it back to User A."
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "ICE Candidates Exchange:"
												}
											]
										},
										{
											"type": "bulletList",
											"content": [
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "Simultaneously, both browsers start discovering the best network paths to connect to each other. They generate "
																},
																{
																	"type": "text",
																	"marks": [
																		{
																			"type": "bold"
																		}
																	],
																	"text": "\"ICE Candidates\""
																},
																{
																	"type": "text",
																	"text": " (network path options) and exchange them back and forth via the server in the same way they exchanged the offer/answer."
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Direct Connection Established:"
												}
											]
										},
										{
											"type": "bulletList",
											"content": [
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "Once the offer, answer, and ICE candidates have been exchanged, both browsers have enough information to create a "
																},
																{
																	"type": "text",
																	"marks": [
																		{
																			"type": "bold"
																		}
																	],
																	"text": "direct, secure, peer-to-peer (P2P) connection"
																},
																{
																	"type": "text",
																	"text": "."
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"type": "paragraph",
							"attrs": {
								"dir": "auto"
							},
							"content": [
								{
									"type": "text",
									"marks": [
										{
											"type": "bold"
										}
									],
									"text": "At this point, the server's job is done for this call."
								}
							]
						},
						{
							"type": "heading",
							"attrs": {
								"dir": "auto",
								"level": 3
							},
							"content": [
								{
									"type": "text",
									"marks": [
										{
											"type": "bold"
										}
									],
									"text": "Phase 3: The Live Call"
								}
							]
						},
						{
							"type": "orderedList",
							"attrs": {
								"start": 1
							},
							"content": [
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "UI Updates:"
												},
												{
													"type": "text",
													"text": " For both users, the idle screen fades out, and the main call interface is revealed. User A sees User B's video in the main frame, and vice-versa. The in-call controls (Mute, Cam Off, etc.) become visible."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Direct Video Streaming:"
												},
												{
													"type": "text",
													"text": " The video and audio data are now streaming directly between User A and User B's browsers via the encrypted WebRTC connection. "
												},
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "This data does not pass through the server."
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "In-Call Interactions (e.g., Counseling Mode):"
												}
											]
										},
										{
											"type": "bulletList",
											"content": [
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "If a user clicks the \"Questions\" button, a message is sent via the "
																},
																{
																	"type": "text",
																	"marks": [
																		{
																			"type": "bold"
																		}
																	],
																	"text": "WebSocket"
																},
																{
																	"type": "text",
																	"text": " to the server, which relays it to the other user to ensure both UIs enter question mode simultaneously."
																}
															]
														}
													]
												},
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "All in-call feature updates (like changing questions) are synchronized using this same WebSocket signaling channel."
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"type": "listItem",
									"content": [
										{
											"type": "paragraph",
											"attrs": {
												"dir": "auto"
											},
											"content": [
												{
													"type": "text",
													"marks": [
														{
															"type": "bold"
														}
													],
													"text": "Ending the Call:"
												}
											]
										},
										{
											"type": "bulletList",
											"content": [
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "One user clicks the \"End Call\" button."
																}
															]
														}
													]
												},
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "Their browser closes the WebRTC peer connection."
																}
															]
														}
													]
												},
												{
													"type": "listItem",
													"content": [
														{
															"type": "paragraph",
															"attrs": {
																"dir": "auto"
															},
															"content": [
																{
																	"type": "text",
																	"text": "The page reloads, returning them to the initial idle screen, ready for a new call. The other user's connection is automatically dropped, and their page will also reset."
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				}
			},
			"parentId": "page:page",
			"index": "a2qgkPkV",
			"typeName": "shape"
		}
	]
}